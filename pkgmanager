#!/bin/bash

PKGUTIL=/usr/sbin/pkgutil
INSTALLER=/usr/sbin/installer
RM=/bin/rm
RMDIR=/bin/rmdir
SED=/usr/bin/sed
ID=/usr/bin/id
ECHO=/bin/echo
GREP=/usr/bin/grep

function usage {
	$ECHO $'pkgmanager usage: pkgmanager\n\t\t[--help]\n\t\t[--list]\n\t\t[--info <pkg-id>]\n\t\t[--install <path-to-pkg> [<path-to-pkg>...]]\n\t\t[--uninstall <pkg-id> [<pkg-id>...]]'
}

function list_pkgs {
	$PKGUTIL --packages
}

function install_pkg {
	$INSTALLER -pkginfo -package $1 &> /dev/null
	if [ $? -ne 0 ]
	then
		$ECHO "pkgmanager: $1 ist not a valid package"
		exit 1
	elif [ `$ID -u` -ne 0 ]
	then
		$ECHO "pkgmanager: Needs to be run as root"
		exit 1
	else
		$ECHO "pkgmanager: Innstalling $1"
		$INSTALLER -package $1 -target LocalSystem &> /dev/null
		if [ $? -eq 0 ]
		then
			$ECHO "pkgmanager: Installation successful"
		else
			$ECHO "pkgmanager: Error during installation"
			exit 1
		fi
	fi
}

function uninstall_pkg {
	# Check if the package is installed 
	$PKGUTIL --pkg-info $1 &> /dev/null
	if [ $? -ne 0 ]
	then
		$ECHO "pkgmanager: Package $1 is not installed"
		exit 1
	elif [ `$ID -u` -ne 0 ]
	then
		$ECHO "pkgmanager: Needs to be run as root"
		exit 1
	else
		$ECHO "pkgmanager: Uninstalling $1"
		VOLUME=`$PKGUTIL --pkg-info $1 | $GREP volume: | $SED 's/^.\{8\}//g'`
		LOCATION=`$PKGUTIL --pkg-info $1 | $GREP location: | $SED 's/^.\{10\}//g'`

		# Make sure that slashes in $VOLUME and $LOCATION are set correctly
		if [[ $VOLUME != */ ]]
		then
			VOLUME=$VOLUME/
		fi
		if [[ $VOLUME != /* ]]
		then
			VOLUME=/$VOLUME
		fi
		if [ "$LOCATION" != "" ]
		then
			if [[ $LOCATION != */ ]]
			then
				LOCATION=$LOCATION/
			fi
			if [[ $LOCATION == /* ]]
			then
				LOCATION="${LOCATION:1:${#LOCATION}-1}"
			fi
		fi

		SAVEIFS=$IFS
		IFS=`$ECHO $'\n\b'`
		FILES=`$PKGUTIL --only-files --files $1` 
		DIRS=( `$PKGUTIL --only-dirs --files $1` )

		# Check if all files are present
		for FILE in $FILES
		do
			if [ ! -f "$VOLUME$LOCATION$FILE" ]
			then
				$ECHO "pkgmanager: File $VOLUME$LOCATION$FILE does not exist, abborting"
				exit 1
			fi
		done

		# Check if all directories are present
		for (( idx=${#DIRS[@]}-1 ; idx>=0 ; idx-- ))
		do
			if [ ! -d "$VOLUME$LOCATION${DIRS[idx]}" ]
			then
				$ECHO "pkgmanager: Directory $VOLUME$LOCATION${DIRS[idx]} does not exist, abborting"
				exit 1
			fi
		done

		# Delete files
		for FILE in $FILES
		do
			$RM $VOLUME$LOCATION$FILE &> /dev/null
			if [ $? -eq 0 ]
			then
				$ECHO "pkgmanager: Removed file $VOLUME$LOCATION$FILE"
			fi
		done

		# Delete empty directories
		for (( idx=${#DIRS[@]}-1 ; idx>=0 ; idx-- ))
		do
			$RMDIR $VOLUME$LOCATION${DIRS[idx]} &> /dev/null
			if [ $? -eq 0 ]
			then
				$ECHO "pkgmanager: Removed directory $VOLUME$LOCATION${DIRS[idx]}"
			fi
		done
		IFS=$SAVEIFS
		$PKGUTIL --forget $1 &> /dev/null
		$ECHO "pkgmanager: Uninstallation successful"
	fi
}

function info_pkg {
	$PKGUTIL --info $1
}

if [ $# -eq 1 ]
then
	if [ $1 == "--help" ]
	then
		usage
	elif [ $1 == "--list" ]
	then
		list_pkgs
	else
		usage
	fi
elif [ $# -gt 1 ]
then
	ARGS=$@
	PKGS=${ARGS#* }
	if [ $1 == "--install" ]
	then
		for PKG in $PKGS
		do
			install_pkg $PKG
		done
	elif [ $1 == "--uninstall" ]
	then
		for PKG in $PKGS
		do
			uninstall_pkg $PKG
		done
	elif [ $1 == "--info" ] && [ $# -eq 2 ]
	then
		info_pkg $2
	else
		usage
	fi
else
	usage
fi

