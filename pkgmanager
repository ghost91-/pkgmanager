#!/bin/bash

PKGUTIL=/usr/sbin/pkgutil
INSTALLER=/usr/sbin/installer
RM=/bin/rm
RMDIR=/bin/rmdir
AWK=/usr/bin/awk
ID=/usr/bin/id
CUT=/usr/bin/cut
ECHO=/bin/echo
GREP=/usr/bin/grep

function usage {
	$ECHO $'pkgmanager usage: pkgmanager\n\t\t[--help]\n\t\t[--list]\n\t\t[--install <path-to-pkg> [<path-to-pkg>...]]\n\t\t[--uninstall <pkg-id> [<pkg-id>...]]'
}

function list_pkgs {
	$PKGUTIL --packages
}

function install_pkg {
	$INSTALLER -pkginfo -package $1 &> /dev/null
	if [ $? -ne 0 ]
	then
		$ECHO "pkgmanager: $1 ist not a valid package"
		exit 1
	elif [ `$ID -u` -ne 0 ]
	then
		$ECHO "pkgmanager: Needs to be run as root"
		exit 1
	else
		$ECHO "pkgmanager: Innstalling $1"
		$INSTALLER -package $1 -target LocalSystem &> /dev/null
		if [ $? -eq 0 ]
		then
			$ECHO "pkgmanager: Installation successful"
		else
			$ECHO "pkgmanager: Error during installation"
			exit 1
		fi
	fi
}

function uninstall_pkg {
	# Check if the package is installed 
	$PKGUTIL --pkg-info $1 &> /dev/null
	if [ $? -ne 0 ]
	then
		$ECHO "pkgmanager: Package $1 is not installed"
		exit 1
	elif [ `$ID -u` -ne 0 ]
	then
		$ECHO "pkgmanager: Needs to be run as root"
		exit 1
	else
		$ECHO "pkgmanager: Uninstalling $1"
		VOLUME=`$PKGUTIL --pkg-info $1 | $GREP volume: | $AWK '{print $2}'`
		LOCATION=`$PKGUTIL --pkg-info $1 | $GREP location: | $AWK '{print $2}'`
		if [ "$LOCATION" != "" ]
		then
			LOCATION=$LOCATION/
		fi
		FILES=`$PKGUTIL --only-files --files $1` 
		DIRS=`$PKGUTIL --only-dirs --files $1`
		DIRS=`$ECHO $DIRS | $AWK '{ for (i=NF;i>=1;i--) { if(s){s=s" "$i}else{s=$i }}{print s;s=""}}'`
		# Delete files
		for FILE in $FILES
		do
			$RM $VOLUME$LOCATION$FILE &> /dev/null
			if [ $? -eq 0 ]
			then
				$ECHO "pkgmanager: Removed file $VOLUME$LOCATION$FILE"
			fi
		done
		# Delete empty directories
		for DIR in $DIRS
		do
			$RMDIR $VOLUME$LOCATION$DIR &> /dev/null
			if [ $? -eq 0 ]
			then
				$ECHO "pkgmanager: Removed directory $VOLUME$LOCATION$DIR"
			fi
		done
		$PKGUTIL --forget $1 &> /dev/null
		$ECHO "pkgmanager: Uninstallation successful"
	fi
}

if [ $# -eq 1 ]
then
	if [ $1 == "--help" ]
	then
		usage
	elif [ $1 == "--list" ]
	then
		list_pkgs
	else
		usage
	fi
elif [ $# -gt 1 ]
then
	ARGS=$@
	PKGS=${ARGS#* }
	if [ $1 == "--install" ]
	then
		for PKG in $PKGS
		do
			install_pkg $PKG
		done
	elif [ $1 == "--uninstall" ]
	then
		for PKG in $PKGS
		do
			uninstall_pkg $PKG
		done
	else
		usage
	fi
else
	usage
fi

